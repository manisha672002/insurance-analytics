create database insurance;
use insurance;
select * from brokerage;
desc brokerage;
select * from fees;
desc fees;
select * from individual_budget;
desc individual_budget;
select * from invoice;
desc invoice;
select * from meeting;
desc meeting;
select * from opportunity;
desc opportunity;
show tables;

-- New Sell,Cross Sell,Renewal Sell having Target,Achieved,Invoice in Millions

select
     'New Sell' as Category,
     round((select sum(`New Budget`) from individual_budget)/1000000,2) as Target,
	round((
     (select sum(Amount) from brokerage where income_class='New')+(select sum(Amount) from fees where income_class='New') 
     )/1000000,2)as Achieved,
    round((select sum(Amount) from invoice where income_class='New')/1000000,2) as Invoice
    union all
   select
	'Cross Sell' as Category,
     round((select sum(`Cross sell bugdet`) from individual_budget)/1000000,2) as Target,
	round((
     (select sum(Amount) from brokerage where income_class='Cross Sell')+(select sum(Amount) from fees where income_class='Cross Sell') 
     )/1000000,2)as Achieved,
    round((select sum(Amount) from invoice where income_class='Cross Sell')/1000000,2) as Invoice
    union all
    select
     'Renewal Sell' as Category,
     round((select sum(`Renewal Budget`) from individual_budget)/1000000,2) as Target,
	round((
     (select sum(Amount) from brokerage where income_class='Renewal')+(select sum(Amount) from fees where income_class='Renewal') 
     )/1000000,2)as Achieved,
    round((select sum(Amount) from invoice where income_class='Renewal')/1000000,2) as Invoice; 
    
    -- Placed Achievement and Invoice Achievement in Percentage
    select 
		'New Sell' as category,round((
       ( (select sum(Amount) from brokerage where income_class='New')+(select sum(Amount) from fees where income_class='New'))*100
        / (select sum(`New Budget`) from individual_budget)),2) as placed_achievement,
       round( ( (select sum(Amount) from invoice where income_class='New')*100
        /(select sum(`New Budget`) from individual_budget)),2) as invoice_achievment 
        union all
        select 
		'Cross Sell' as category,round((
       ( (select sum(Amount) from brokerage where income_class='Cross Sell')+(select sum(Amount) from fees where income_class='Cross Sell'))*100
        / (select sum(`Cross sell bugdet`) from individual_budget)),2) as placed_achievement,
       round( ( (select sum(Amount) from invoice where income_class='Cross Sell')*100
        /(select sum(`Cross sell bugdet`) from individual_budget)),2) as invoice_achievment
        union all
        select 
		'Renewal Sell' as category,round((
       ( (select sum(Amount) from brokerage where income_class='Renewal')+(select sum(Amount) from fees where income_class='Renewal'))*100
        / (select sum(`Renewal Budget`) from individual_budget)),2) as placed_achievement,
       round( ( (select sum(Amount) from invoice where income_class='Renewal')*100
        /(select sum(`Renewal Budget`) from individual_budget)),2) as invoice_achievment;
    



SET  SQL_SAFE_UPDATES=0;
update meeting set meeting_date=str_to_date(meeting_date,'%d-%m-%Y');
alter table meeting modify column meeting_date date;

-- no of meetings attended by account executive 
select `Account Executive`, count(meeting_date) as No_of_Meetings,year(meeting_date) as meeting_year
from meeting
group by `Account Executive` ,year(meeting_date)
order by meeting_year asc; 
-- Yearly meeting count 
select year(meeting_date) as meeting_year,count(meeting_date) as no_of_meetings
from meeting
group by year(meeting_date);


-- no of invoice generated by account executive
select `Account Executive` ,count(invoice_number) as No_of_invoices,income_class
from invoice 
group by `Account Executive`,income_class
order by `Account Executive`,No_of_invoices desc;


-- Top 7 Opportunities By sum of Revenue Amount
select opportunity_name,sum(revenue_amount) as sum_of_revenue
from opportunity
group by opportunity_name
order by sum_of_revenue desc
limit 7;

-- Top 7 Open Opprtunities(stage=proposal,quality) by Sum of Revenue Amount
select opportunity_name,sum(revenue_amount) as sum_of_revenue
from opportunity
where stage !='Negotiate'
group by opportunity_name
order by sum_of_revenue desc
limit 7;
-- Total Opportunites and Total Open Opportunities
select count(opportunity_name) as Total_Opportunities,
count(case when stage!='Negotiate'then opportunity_name end)  as Open_Opportunities
from opportunity;


-- Stage by Revenue Amount 
select stage,sum(revenue_amount) as Sum_of_Revenue
from opportunity
group by stage 
order by Sum_of_Revenue desc;


-- No of Opportunities By Product Group
select product_group,count(opportunity_id) as No_of_Opportunities
from opportunity 
group by product_group
order by No_of_Opportunities desc;


